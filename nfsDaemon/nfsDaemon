#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          nfsDaemon
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.  This example start a
#                    single forking daemon capable of writing a pid
#                    file.  To get other behavoirs, implemend
#                    do_start(), do_stop() or other functions to
#                    override the defaults in /lib/init/init-d-script.
### END INIT INFO

readConf(){
	if [ -f ~/var/conf ]
	then
		address=`sed -n 1p ~/var/conf`
		path1=`sed -n 2p ~/var/conf`
		path2=`sed -n 3p ~/var/conf`
	else
		address=0
		path1=0
		path2=0
	fi	
}

insConf(){
	IP=$(whiptail --title "settings" --inputbox "Введите IP сервера" 10 60 $address 3>&1 1>&2 2>&3)
	pathServ=$(whiptail --title "settings" --inputbox "Введите путь к общедоступной папке" 10 60 $path1 3>&1 1>&2 2>&3)
	pathLocal=$(whiptail --title "settings" --inputbox "Введите точку монтирования" 10 60 $path2 3>&1 1>&2 2>&3)
	echo "$IP\n$pathServ\n$pathLocal" > ~/var/conf
}

uptime(){
	if !([ -f $path2/nfs.log ])
	then
		touch $path2/nfs.log
		upH="NaN"
		upM="NaN"
		upS="NaN"
	else
		date1=`cat $path2/nfs.log | grep ':' | tail -1 | sed -n 1p`
		date2=`date +%H":"%M":"%S" "%D`
		upH=$((`date -d "$date2" '+%H'` - `date -d "$date1" '+%H'`))
		upM=$((`date -d "$date2" '+%M'` - `date -d "$date1" '+%M'`))
		upS=$((`date -d "$date2" '+%S'` - `date -d "$date1" '+%S'`))
	fi 
}

imprintC(){
	echo "`date +%H":"%M":"%S" "%D`\nThe $USER with the address $address has connected." >> $path2/nfs.log
}

imprintD(){
	uptime
	echo "`date +%H":"%M":"%S" "%D`\nThe $USER with the address $address has disconnected. Uptime was ${upH}:${upM}:${upS}" >> $path2/nfs.log
}
readConf
case "$1" in
	start)	
		rm -rf $path2
		mkdir $path2
		sudo mount -t nfs ${address}:${path1} ${path2}
		imprintC
		;;
	stop)	
		imprintD
		sudo umount -l $path2
        ;;
	restart) 
		$0 stop
		$0 startc
        ;;
	settings)
		insConf
		;;
	*)	log_action_msg "Используйте: /etc/init.d/nfsDaemon {start|stop|restart|setting}"
        exit 2
        ;;
esac
exit 0
